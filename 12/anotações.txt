AULA 1
criando o projeto web
#yarn create react-app web --template typescript
OU caso eu não tenha o yarn instalado
#npx create-react-app web --template typescript

um dos dois comandos acima funcionam para criar o projeto

para executar o projeto web
#cd web
#yarn start

no vídeo eu limpei o projeto

Adicionei o pacote react-router-dom, isso servirá para fazer navegação entre as páginas
#yarn add react-router-dom
depois será necessario instalar o 
#yarn add @types/react-router-dom


AULA 2
criei a pasta do servidor e iniciei
#mkdir server
#yarn init -y

abrir o code para começar a trabalhar

instalei as dependencias do typescript
-D para instalar no ambiente de desenvolvimento

#yarn add typescript -D
#yarn tsc --init

a dependencia abaixo executa o servidor e fica observando caso tenha alteração no código
#yarn add ts-node-dev -D

adicionei as coisas no package.json para executar o programa
--transpile-only isso aqui transforma do typescript em java script sem verifica erros, isso acelera o processo de execução da aplicação
--ignore-watch node_modules isso aqui eu não quero que ele tente fazer conversões de código na pasta node_modules
--respawn sempre que eu tiver alteração no código ele restarta

tudo vai ficar assim
"start": "ts-node-dev --transpile-only --ignore-watch node_modules --respawn src/server.ts"

instalar o microframework abaixo
#yarn add express
#yarn add @types/express -D

instalar os arquivos de conexão do banco de dados
#yarn add knex sqlite3

executar os comando para criar migrations
criei o arquivo knexfile.ts na raiz do projeto

fiz modificações no arquivo package.json
e criei na mão a minha migrate de users
depois executei o comando abaixo com as adições que fiz no package.js on
#yarn knex:migrate

ultimo pacote aser instalado
#yarn add cors
#yarn add @types/cors -D
ele vai permitir que outras aplicações em endereços diferentes acesse o meu sevidor, pois por padrão ele só permite acessar o servidor com endereços iguais



aqui na aula 3 eu ja irei iniciar a conexão do web com server
para fazer essa conexão eu irei instalar uma nova biblioteca
#yarn add axios


QUARTA AULA, INICIANDO O MOBILE
aqui eu ja tenho que ter o expo instalado na minha maquina
#expo init mobile
ele pode informar que há versões nova do expo veja o texto abaixo
------------------------------------------------------------------------------
There is a new version of expo-cli available (3.27.8).
You are currently using expo-cli 3.24.2
Install expo-cli globally using the package manager of your choice;
for example: `npm install -g expo-cli` to get the latest version
-------------------------------------------------------------------------------
ele ira dar opções tambem, aqui eu selecionei black (TypeScript)

instalar os pacotes de font do expo
#expo install expo-font @expo-google-fonts/archivo @expo-google-fonts/poppins

instalar a biblioteca abaixo para ter navegação das telas
para os comandor abaixo ver link https://reactnavigation.org/docs/getting-started
#yarn add @react-navigation/native
#expo install react-native-gesture-handler react-native-reanimated react-native-screens react-native-safe-area-context @react-native-community/masked-view
https://reactnavigation.org/docs/hello-react-navigation
#yarn add @react-navigation/stack
https://reactnavigation.org/docs/tab-based-navigation
#yarn add @react-navigation/bottom-tabs

instalar o axios
#yarn add axios

tive problemas para usar a linha import AsyncStorage from '@react-native-community/async-storage';
então adicionei o pacote abaixo
#yarn add @react-native-community/async-storage




